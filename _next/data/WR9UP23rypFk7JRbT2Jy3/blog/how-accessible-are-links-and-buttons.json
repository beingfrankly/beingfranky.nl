{"pageProps":{"frontmatter":{"type":"blog","title":"How are links and buttons understood?","published":false,"publishedOn":null,"tags":["accessibility","ux","links","buttons"],"description":"Links and buttons are one of the main basic elements that you’ll find on any website. Yet, a lot of them are not as accessible as we would like. If we don't know how they're interpreted by assistive technologies we’re bound to make some mistakes as developers.","keywords":[],"slug":"how-accessible-are-links-and-buttons","id":null,"createdOn":"2021-11-13T21:00:48Z","modifiedOn":"2021-12-10T19:42:57Z"},"code":"var Component=(()=>{var h=Object.create;var a=Object.defineProperty;var c=Object.getOwnPropertyDescriptor;var d=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var l=t=>a(t,\"__esModule\",{value:!0});var p=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),b=(t,e)=>{l(t);for(var o in e)a(t,o,{get:e[o],enumerable:!0})},f=(t,e,o)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of d(e))!m.call(t,i)&&i!==\"default\"&&a(t,i,{get:()=>e[i],enumerable:!(o=c(e,i))||o.enumerable});return t},w=t=>f(l(a(t!=null?h(u(t)):{},\"default\",t&&t.__esModule&&\"default\"in t?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t);var r=p((I,s)=>{s.exports=_jsx_runtime});var v={};b(v,{default:()=>k,frontmatter:()=>g});var n=w(r()),g={type:\"blog\",title:\"How are links and buttons understood?\",published:!1,publishedOn:null,tags:[\"accessibility\",\"ux\",\"links\",\"buttons\"],description:\"Links and buttons are one of the main basic elements that you\\u2019ll find on any website. Yet, a lot of them are not as accessible as we would like. If we don't know how they're interpreted by assistive technologies we\\u2019re bound to make some mistakes as developers.\",keywords:[],slug:\"how-accessible-are-links-and-buttons\",id:null,createdOn:\"2021-11-13T21:00:48Z\",modifiedOn:\"2021-12-10T19:42:57Z\"};function y(t={}){let e=Object.assign({h1:\"h1\",p:\"p\",code:\"code\",a:\"a\",h2:\"h2\",ul:\"ul\",li:\"li\"},t.components),{wrapper:o}=e,i=(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{children:\"How accessible are links and buttons?\"}),`\n`,(0,n.jsx)(e.p,{children:\"Links and buttons are one of the main basic elements that you\\u2019ll find on any website. Yet, a lot of them are not as accessible as we would like. And we\\u2019re bound to make mistakes as developers, if we don't know how they're understood by assistive technologies.\"}),`\n`,(0,n.jsx)(e.p,{children:\"In this short article I'll focus on screen readers and voice recognition and how they deal with links and buttons. I'll not cover every possible problem that could happen. I'm going to reserve that for a different article which I'll publish soon.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Before we continue, I want to avoid any confusion upfront. When we\\u2019re talking about links or buttons, I assume that they're using the proper semantic element, a \",(0,n.jsx)(e.code,{children:\"<a>\"}),\" and \",(0,n.jsx)(e.code,{children:\"<button>\"}),\".\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Using a different HTML element \\u2014 like a \",(0,n.jsx)(e.code,{children:\"<div>\"}),\" which looks like a link or a button \\u2014 might not be set up right. And this could cause other problems for assistive technologies. If you want to know more on this, I've written an article on why we should \",(0,n.jsx)(e.a,{href:\"https://beingfrankly.nl/blog/rules-on-using-aria\",children:\"prefer semantic HTML\"}),\".\"]}),`\n`,(0,n.jsx)(e.h2,{children:\"How assistive technologies understand a web page\"}),`\n`,(0,n.jsx)(e.p,{children:\"This is possible through the use of many accessibility API\\u2019s. The platform that the browser runs on uses one of those API\\u2019s to read the content of a web page.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"How this process actually works in the background would be too much for this article. If you want to learn the details I recommend you to read \",(0,n.jsx)(e.a,{href:\"https://www.smashingmagazine.com/2015/03/web-accessibility-with-accessibility-api/\",children:\"Web Accessibility with Accessibility API\"}),\". It\\u2019s a great article written by \",(0,n.jsx)(e.a,{href:\"https://twitter.com/leoniewatson\",children:\"L\\xE9onie Watson\"}),\".\"]}),`\n`,(0,n.jsx)(e.p,{children:\"The part that\\u2019s important for us to know is that those API's expose certain information. This happens for every object in the DOM. This information is crucial for assistive technologies to understand what each object means.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"There are two pieces of information I want to focus on, and those are the \",(0,n.jsx)(e.code,{children:\"role\"}),\" and the \",(0,n.jsx)(e.code,{children:\"name\"}),\". The \",(0,n.jsx)(e.code,{children:\"role\"}),\" of the DOM object exposes its purpose. It could be a link, a button or something else like an image. The \",(0,n.jsx)(e.code,{children:\"name\"}),\" of the DOM object gives its identity. It\\u2019s also referred as the \",(0,n.jsx)(e.a,{href:\"https://www.w3.org/TR/accname-1.1/#dfn-accessible-name\",children:\"Accessible Name\"}),\".\"]}),`\n`,(0,n.jsx)(\"iframe\",{height:\"400\",width:\"100%\",scrolling:\"no\",title:'Cards with \"read more\" links',src:\"https://codepen.io/beingfrankly/embed/oNGLQea?default-tab=result&theme-id=dark\",frameborder:\"no\",loading:\"lazy\",allowtransparency:\"true\",allowfullscreen:\"true\",children:(0,n.jsxs)(e.p,{children:[\"See the Pen \",(0,n.jsx)(\"a\",{href:\"https://codepen.io/beingfrankly/pen/oNGLQea\",children:`\nCards with \"read more\" links`}),\" by Frank van Eldijk-Smeding (\",(0,n.jsx)(\"a\",{href:\"https://codepen.io/beingfrankly\",children:\"@beingfrankly\"}),`)\non `,(0,n.jsx)(\"a\",{href:\"https://codepen.io\",children:\"CodePen\"}),\".\"]})}),`\n`,(0,n.jsx)(e.p,{children:\"So, let\\u2019s use the example above to quickly recap what we\\u2019ve learned.\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"The \",(0,n.jsx)(e.code,{children:\"<main>\"}),\" element will have the \",(0,n.jsx)(e.code,{children:\"role\"}),\" of \\u201Cmain\\u201D. The \",(0,n.jsx)(e.code,{children:\"name\"}),\" is empty because we didn\\u2019t supply one.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Each \",(0,n.jsx)(e.code,{children:\"<p>\"}),\" element will have the \",(0,n.jsx)(e.code,{children:\"role\"}),\" of \\u201Cparagraph\\u201D. Again the \",(0,n.jsx)(e.code,{children:\"name\"}),\" is empty since we didn\\u2019t supply one.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Every \",(0,n.jsx)(e.code,{children:\"<a>\"}),\" element will have the \",(0,n.jsx)(e.code,{children:\"role\"}),\" of \\u201Clink\\u201D. The \",(0,n.jsx)(e.code,{children:\"name\"}),\" will be \\u201CRead more\\u201D. This happens because the \",(0,n.jsx)(e.code,{children:\"name\"}),\" \\u2014 or Accessible Name \\u2014 is determined from a list of possible options. And in this case it was the value inside the \",(0,n.jsx)(e.code,{children:\"<a>\"}),\" element that\\u2019s used for the Accessible Name.\"]}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"I\\u2019ve picked this example on purpose because it\\u2019s quite common to see a list of cards. Each card having a title, some text and at the bottom a \\u201CRead more\\u201D link.\"}),`\n`,(0,n.jsx)(e.p,{children:\"So, let\\u2019s see which problems could happen for screen readers & voice recognition if we leave the example above untouched.\"}),`\n`,(0,n.jsx)(e.h2,{children:\"Potential problems for screen readers & voice recognition\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"When a sighted user sees a \\u201CRead more\\u201D link that\\u2019s near other elements, they\\u2019re able to group them together. The context behind the \\u201CRead more\\u201D link is then related to the text and the title. It becomes clear what to expect when they press the link. This happens because of the \",(0,n.jsx)(e.a,{href:\"https://lawsofux.com/law-of-proximity/\",children:\"Law of Proximity\"}),\" and/or the \",(0,n.jsx)(e.a,{href:\"https://lawsofux.com/law-of-common-region/\",children:\"Law of Common Region\"}),\", depending on how the elements are visually styled.\"]}),`\n`,(0,n.jsx)(e.p,{children:\"Yet, people who rely on screen readers are usually not able to scan the page, and group elements based on visual proximity. So, in this case the \\u201CRead more\\u201D link doesn\\u2019t have any meaning to them.\"}),`\n`,(0,n.jsx)(e.p,{children:\"For people who depend on voice recognition, might be able to group elements together. But, they\\u2019ll have a different problem. To interact with elements they say \\u201CClick\\u201D \\u2014 I\\u2019m using Voice Control on MacOS \\u2014 followed by the Accessible Name of the link. This will then press the element that matches the Accessible Name.\"}),`\n`,(0,n.jsx)(e.p,{children:\"So, in our first example it would be \\u201CClick, Read more\\u201D. But, this will number each \\u201CRead more\\u201D link. Because the voice recognition software doesn\\u2019t understand which link they meant.\"}),`\n`,(0,n.jsx)(e.p,{children:\"Both cases lead up to a poor user experience and could end up in frustration. How could we solve this?\"}),`\n`,(0,n.jsx)(e.h2,{children:\"The solution (well, one of many)\"}),`\n`,(0,n.jsx)(e.p,{children:\"Well, there are a couple options available to us. But, let\\u2019s focus on one solution for now to keep this article brief. I\\u2019ll write an in-depth article on a lot more problems/situations and solutions soon.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"If we remove the \\u201CRead more\\u201D link, we could solve both problems. But, what becomes our link then? Well, the entire card could turn into our link. Then give the \",(0,n.jsx)(e.code,{children:\"<a>\"}),\" either an \",(0,n.jsx)(e.code,{children:\"aria-label\"}),\", matching the value of our title. Or use an \",(0,n.jsx)(e.code,{children:\"aria-labelledby\"}),\", which then refers to our \",(0,n.jsx)(e.code,{children:'<div class=\"title\">'}),\". Let\\u2019s check it out!\"]}),`\n`,(0,n.jsx)(\"iframe\",{height:\"400\",width:\"100%\",scrolling:\"no\",title:'Cards with \"read more\" links - possible fix',src:\"https://codepen.io/beingfrankly/embed/PoJGGyj?default-tab=result&theme-id=dark\",frameborder:\"no\",loading:\"lazy\",allowtransparency:\"true\",allowfullscreen:\"true\",children:(0,n.jsxs)(e.p,{children:[\"See the Pen \",(0,n.jsx)(\"a\",{href:\"https://codepen.io/beingfrankly/pen/PoJGGyj\",children:`\nCards with \"read more\" links - possible fix`}),\" by Frank van Eldijk-Smeding (\",(0,n.jsx)(\"a\",{href:\"https://codepen.io/beingfrankly\",children:\"@beingfrankly\"}),`)\non `,(0,n.jsx)(\"a\",{href:\"https://codepen.io\",children:\"CodePen\"}),\".\"]})}),`\n`,(0,n.jsx)(e.p,{children:\"When a screen reader user tabs through the links, or use a shortcut to get a list of links. They\\u2019ll hear each link announced with the name of the title instead of \\u201CRead more\\u201D.\"}),`\n`,(0,n.jsx)(e.p,{children:\"The problem with voice recognition is also solved. Because it\\u2019s now possible to use the command \\u201CClick\\u201D followed by the name of the title.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"If you\\u2019ve liked this piece of content and you want to get regular updates on other things I write about then follow me on \",(0,n.jsx)(e.a,{href:\"https://twitter.com/frank_vaneldijk\",children:\"Twitter\"}),\". And if you have any comments or questions then don\\u2019t hesitate to DM me!\"]}),`\n`,(0,n.jsx)(e.h2,{children:\"Conclusion\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Assistive technologies understand the content of a web page through the platform\\u2019s accessibility API.\"}),`\n`,(0,n.jsx)(e.li,{children:\"Links and buttons should be clear on their own, and not depend on their surrounding context to make sense.\"}),`\n`,(0,n.jsx)(e.li,{children:\"Voice recognition software have shortcuts to interact with elements\"}),`\n`,(0,n.jsx)(e.li,{children:\"Command \\u201CClick\\u201D with the name of the label. The label name needs to match the Accessible Name\"}),`\n`]})]});return o?(0,n.jsx)(o,Object.assign({},t,{children:i})):i}var k=y;return v;})();\n;return Component.default;","canonicalUrl":"https://beingfrankly.nl/blog/how-accessible-are-links-and-buttons"},"__N_SSG":true}